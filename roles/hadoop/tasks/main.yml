---

  - name: "[HADOOP][DEPS] install"
    apt: name={{ item }} state=present update_cache=yes
    with_items:
      - apt-utils
      - openjdk-7-jre-headless
      - openssh-client
      - openssh-server
      - rsync
      - sudo
      - tar
      - gzip
      - wget
    when: state != "absent"

  - name: "[HADOOP][ROOT] delete"
    file:
        path: "{{ hadoop_install_root }}"
        state: absent
    when: state == "absent" or (state == "present" and (force|bool))

  - name: "[HADOOP][ROOT] create"
    file:
        path: "{{ hadoop_install_root }}"
        state: directory
    when: state != "absent"

  - name: "[HADOOP][PKG] download"
    get_url:
        url: "http://archive.apache.org/dist/hadoop/core/\
            hadoop-{{ hadoop_version }}/\
            hadoop-{{ hadoop_version }}.tar.gz"
        dest: "{{ hadoop_install_root }}/hadoop-{{ hadoop_version }}.tar.gz"
        force: no
    when: state != "absent"

  - name: "[HADOOP][PKG] unpack"
    unarchive:
        copy: no
        creates: yes
        dest: "{{ hadoop_install_root }}"
        mode: 0776
        src: "{{ hadoop_install_root }}/hadoop-{{ hadoop_version }}.tar.gz"
    when: state != "absent"

  - name: "[HADOOP][PREFIX] record"
    set_fact:
        hadoop_prefix: "{{ hadoop_install_root }}/hadoop-{{ hadoop_version }}"
    when: state != "absent"

  - name: "[HADOOP][CONF] record"
    set_fact: "hadoop_conf={{ hadoop_prefix }}/etc/hadoop"
    when: state != "absent"

  - name: "[HADOOP][LOG][PERMS] set"
    file:
        path: "{{ hadoop_prefix }}/logs"
        mode: 0777
        state: directory
    when: state != "absent"

# TODO signal to this host to reformat if it's an hdfs namenode


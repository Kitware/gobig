---

  - name: mongodb | shard cluster | logic flags | compute
    set_fact:
        do_init: >
            {{ state == "present" }}
        do_deinit: >
            {{ state == "absent" }}

  - name: mongodb | shard cluster | intialize script | generate
    template:
        src: shard-set-initialize.js.j2
        dest: "{{ mongodb_data_root }}/shard-set-initialize.js"
    when: do_init|bool

  - name: mongodb | shard cluster | deintialize script | generate
    template:
        src: shard-set-deinitialize.js.j2
        dest: "{{ mongodb_data_root }}/shard-set-deinitialize.js"
    when: do_deinit|bool

  - name: mongodb | shard cluster | service | wait
    wait_for:
        host: "{{ inventory_hostname }}"
        port: 27017
        timeout: 10
        state: started

  - name: mongodb | shard cluster | initialize
    command: >
        "{{ mongodb_install_root }}/bin/mongo"
        "--host" "{{ hostvars[inventory_hostname]
                             ['ansible_' + mongodb_net_interface]
                             ['ipv4']
                             ['address'] }}"
        "--port" "27017"
        "{{ mongodb_data_root }}/shard-set-initialize.js"
    when: do_init|bool

  - name: mongodb | shard cluster | deinitialize
    command: >
        "{{ mongodb_install_root }}/bin/mongo"
        "--host" "{{ hostvars[inventory_hostname]
                             ['ansible_' + mongodb_net_interface]
                             ['ipv4']
                             ['address'] }}"
        "--port" "27017"
        "{{ mongodb_data_root }}/shard-set-deinitialize.js"
    when: do_deinit|bool

